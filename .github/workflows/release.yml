name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Set RELEASE_VERSION
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Build
        run: |
          yarn && yarn run build
          cd dist && zip -r ../v-no-$RELEASE_VERSION-template.zip ./* && cd ..
          yarn run clean-dist-template
          cd dist && zip -r ../v-no-$RELEASE_VERSION.zip ./* && cd ..

      - name: Build (hash)
        run: |
          echo "VUE_APP_INDEX_PATH=hash/index.html" > .env.local
          yarn run build
          cd dist && zip -r ../v-no-$RELEASE_VERSION-hash-template.zip ./* && cd ..
          yarn run clean-dist-template
          cd dist && zip -r ../v-no-$RELEASE_VERSION-hash.zip ./* && cd ..

      - name: Create release
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const { repo: { owner, repo } } = context;
            const version = process.env.RELEASE_VERSION;
            const release = await github.repos.createRelease({
              owner, repo,
              tag_name: `v${version}`,
              name: `Draft of v${version}`,
              draft: true,
            });
            await Promise.all([
              '',
              '-hash',
              '-template',
              '-hash-template',
            ].map(ext => `v-no-${version}${ext}.zip`).map(file => github.repos.uploadReleaseAsset({
              owner, repo,
              release_id: release.data.id,
              name: file,
              data: fs.readFileSync(`./${file}`),
            })));

      - name: Unzip templates
        run: |
          unzip ./v-no-$RELEASE_VERSION-template.zip -d v-no-template
          unzip ./v-no-$RELEASE_VERSION-hash-template.zip -d v-no-hash-template

      - name: Deploy v-no-template
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.UPDATE_TEMPLATE_TOKEN }}
          GIT_CONFIG_NAME: AkrISrn
          REPOSITORY_NAME: akrisrn/v-no-template
          BRANCH: master
          FOLDER: v-no-template
          COMMIT_MESSAGE: release v${{ env.RELEASE_VERSION }}

      - name: Deploy v-no-hash-template
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.UPDATE_TEMPLATE_TOKEN }}
          GIT_CONFIG_NAME: AkrISrn
          REPOSITORY_NAME: akrisrn/v-no-hash-template
          BRANCH: master
          FOLDER: v-no-hash-template
          COMMIT_MESSAGE: release v${{ env.RELEASE_VERSION }}
